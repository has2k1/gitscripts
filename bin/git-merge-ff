#!/bin/bash

# Credit to Jefromi at stackoverflow
# http://stackoverflow.com/questions/4156957/merging-branches-without-checkout/4157435#4157435
# Comments added

_usage() {
    echo "Usage: git merge-ff <branch> <committish-to-merge>" 1>&2
    exit 1
}

_merge_ff() {
    branch="$1"
    commit="$2"

    # Check if original branch exists
    # $? = return value of previous command
    # 1>&2 = redirect stdout to stderr
    branch_orig_hash="$(git show-ref -s --verify refs/heads/$branch 2> /dev/null)"
    if [ $? -ne 0 ]; then
        echo "Error: unknown branch $branch" 1>&2
        _usage
    fi

    # Check if commitish/branch point to actual commits
    commit_orig_hash="$(git rev-parse --verify $commit 2> /dev/null)"
    if [ $? -ne 0 ]; then
        echo "Error: unknown revision $commit" 1>&2
        _usage
    fi

    # If merging into the checkedout branch
    if [ "$(git symbolic-ref HEAD)" = "refs/heads/$branch" ]; then
        git merge $quiet --ff-only "$commit"
    else
       # Merge/fast-forward un-checkout branches
       # If the commit_hash is not a child of the branch_hash then a merge would not be a fast-forward
        if [ "$(git merge-base $branch_orig_hash $commit_orig_hash)" != "$branch_orig_hash" ]; then
            echo "Error: merging $commit into $branch would not be a fast-forward" 1>&2
            exit 1
        fi
        echo "Updating ${branch_orig_hash:0:7}..${commit_orig_hash:0:7}"
        # Simply update the ref with a message similar to a merge fast forward
        if git update-ref -m "merge $commit: Fast forward" "refs/heads/$branch" "$commit_orig_hash" "$branch_orig_hash"; then
            if [ -z $quiet ]; then
                echo "Fast forward"
                # Diff between previous value $branch and the current value
                echo -e $(git diff --stat --color="always" "$branch@{1}" "$branch")
            fi
        else
            echo "Error: fast forward using update-ref failed" 1>&2
        fi
    fi
}

# Only option expected is q
while getopts "q" opt; do
    case $opt in
        q ) quiet="-q";;
        * ) ;;
    esac
done
shift $((OPTIND-1))

# $# - Number of arguments/parameters passed to the script
case $# in
    2 ) _merge_ff "$1" "$2";;
    * ) _usage
esac
